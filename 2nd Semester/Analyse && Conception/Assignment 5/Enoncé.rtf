{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Light;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Exercise : \
\
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f1\fs28\fsmilli14440 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Apply the steps from logical modeling to the simple UML model given\'a0{\field{\*\fldinst{HYPERLINK "https://moodle.uni.lu/pluginfile.php/113654/mod_assign/intro/Exercise-LogicalModel.png"}}{\fldrslt here}}\'a0- this is an example from an exam of a previous year (--> create all tables for entities and relationships as explained in class). Then implement all the tables within PostgreSQL (using the provided Docker version). Finally, create and upload a textual dump of the complete SQL code for your solution to Moodle.\
Unfortunately, you can not create dumps with the pgadmin tool, since there is a DB version mismatch in the two docker containers. You should therefore choose the following "manual" strategy:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl560\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Get the ID of the docker container running the PostgreSQL server with "docker ps".\cb1 \uc0\u8232 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open a remote shell:\'a0 "docker exec -it ID /bin/bash" (where ID is the prefix of the docker container ID)\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 pg_dump -U admin DBNAME > /var/lib/postgresql/data/outputfile.sql (replace DBNAME with the actually used name, outputfile.sql can also be replaced if needed)\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Logout: "exit"\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 On the host, you can access the chosen file "outputfile.sql" in the sub-directory "pgdata" - so simply upload that file to Moodle.\cb1 \
}